/**!
 * Lotto.js
 * 
 * A Javascript utility class inspired by the Laravel Lottery facade.
 *
 * Author: Derek Cavaliero (@derekcavaliero)
 * Repository: https://github.com/derekcavaliero/lotto
 * Version: 1.0.beta
 * License: MIT
 */
class Lotto{#t={};#o;constructor(t={}){if(this.#t=Object.assign(this.#t,{handle:null,debug:!1,expires:7,cookieDomain:null,odds:[50,100],onLoss:null,onWin:null},t),!this.#t.handle)throw new Error("Lotto.js - A lottery handle must be provided.");return this.#t.handle=this.constructor.toSnakeCase(this.#t.handle),this}odds(t,o){return this.#t.odds=[t,o],this}choose(){return this.#e()||this.#n(),this.#t.debug&&console.log(`Chosing ${this.#t.handle} lottery ðŸŽ² @ ${this.#t.odds.join(" / ")} odds...`),this.#i()}winner(){if(void 0===this.#o)throw new Error(`The ${this.#t.handle} lottery has not been chosen yet.`);return this.#o}static isWinner(t){return"true"===Lotto.getCookie(t)}static toSnakeCase(t){return t.replace(/[A-Z]/g,(t=>`_${t.toLowerCase()}`))}static getCookieName(t){return`__lotto_${Lotto.toSnakeCase(t)}`}static getCookie(t){name=`${this.getCookieName(t)}=`;let o=decodeURIComponent(document.cookie).split(";");for(let t=0;t<o.length;t++){let e=o[t];for(;" "==e.charAt(0);)e=e.substring(1);if(0==e.indexOf(name))return e.substring(name.length,e.length)}return""}#s(t){const o=new Date;o.setTime(o.getTime()+24*this.#t.expires*60*60*1e3);let e=`expires=${o.toUTCString()}`;const n=this.#t.cookieDomain??this.#r();document.cookie=`${this.constructor.getCookieName(this.#t.handle)}=${t};${e};${n};path=/`}#r(t=location.hostname){const o=t.split(".");return 1===o.length?o[0]:["co.uk","co.jp","co.nz","co.za","com.au","net.au"].includes(o.slice(-2).join("."))?o.slice(-3).join("."):o.slice(-2).join(".")}#c(t){return Math.floor(Math.random()*t)}#i(){const t=this.#c(100)<Math.floor(this.#t.odds[0]/this.#t.odds[1]*100);return this.#s(t),this.#h(t),t}#n(){const t=this.constructor.getCookie(this.#t.handle);this.#t.debug&&console.log(`Forcing result (${t}) of ${this.#t.handle} lottery.`),this.#h(t)}#h(t){const o=t?"onWin":"onLoss";"function"==typeof this.#t[o]&&this.#t[o](this.#t.handle)}#e(){return""===this.constructor.getCookie(this.#t.handle)}}
